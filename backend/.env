 ACCESS_TOKEN_SECRET=76583903ndkjfbdfkjgur859345723jnmdnmfkvgljdfgiu96592375934659iuhefkjdnvsdlfjaowdegvfh

# const express = require('express');
# const mongoose = require('mongoose');
# const bodyParser = require('body-parser');

# const app = express();
# const PORT = process.env.PORT || 3000;
# const connectionString = 'your_mongodb_connection_string_here'; // Replace with your actual MongoDB connection string

# // Middleware
# app.use(bodyParser.json());

# // MongoDB Connection
# mongoose.connect(connectionString, {
#     useNewUrlParser: true,
#     useUnifiedTopology: true,
#     useCreateIndex: true // Add this line to avoid deprecation warning
# }).then(() => {
#     console.log("Database connected!");
# }).catch(err => {
#     console.error("Database connection error:", err);
#     process.exit(1); // Exit the process on connection error
# });

# // Define Note schema and model
# const Note = mongoose.model('Note', {
#     title: String,
#     tags: [String],
#     content: String
# });

# // Route to add a new note
# app.post('/api/notes', async (req, res) => {
#     const { title, tags, content } = req.body;

#     try {
#         // Create a new note instance
#         const newNote = new Note({
#             title,
#             tags,
#             content
#         });

#         // Save the note to the database
#         await newNote.save();

#         // Return success response
#         res.status(201).json(newNote);
#     } catch (error) {
#         // Handle error
#         console.error("Error saving note:", error);
#         res.status(500).json({ error: error.message });
#     }
# });

# // Start the server
# app.listen(PORT, () => {
#     console.log(`Server is running on http://localhost:${PORT}`);
# });